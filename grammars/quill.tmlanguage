<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0"> <dict>
    <key>fileTypes</key> <array> 
        <string>quill</string>
  	</array>
	<key>name</key> <string>quill</string>
  	<key>patterns</key> <array> 
    	<dict>
      		<key>include</key> <string>#main</string>
    	</dict>
   	</array>
	<key>scopeName</key> <string>source.quill</string>
  	<key>uuid</key> <string>8f285c78-2801-11ee-be56-0242ac120002</string>
  	<key>repository</key> <dict>
		<key>types</key> <dict>
			<key>patterns</key> <array> 

				<!-- identifiers -->
				<dict>
          			<key>match</key> <string>\b([a-zA-Z_][a-zA-Z0-9_]*)\b</string>
          			<key>name</key> <string>entity.name.type.quill</string>
        		</dict>

				<!-- operators -->
        		<dict>
					<key>match</key> <string>(->)</string>
          			<key>name</key> <string>keyword.operator.quill</string>
        		</dict>

				<!-- punctuation -->
				<dict>
					<key>match</key> <string>(\(\))</string>
					<key>name</key> <string>punctuation.brackets.quill</string>
				</dict>

				<dict>
					<key>begin</key> <string>(\()</string>
					<key>beginCaptures</key> <dict>
						<key>1</key> <dict>
							<key>name</key> <string>punctuation.brackets.quill</string>
						</dict>
					</dict>
					<key>patterns</key> <array> 
						<dict>
              				<key>include</key> <string>#types</string>
            			</dict>
					</array>
					<key>end</key> <string>(\))</string>
					<key>endCaptures</key> <dict>
						<key>1</key> <dict>
							<key>name</key> <string>punctuation.brackets.quill</string>
						</dict>
					</dict>
				</dict>

				<dict>
					<key>match</key> <string>(\[|\]|\(|\))</string>
					<key>name</key> <string>punctuation.brackets.quill</string>
				</dict>

			</array>
		</dict>
		<key>argDecl</key> <dict>
			<key>patterns</key> <array> 

				<!-- argument declaration with type -->
				<dict>
					<key>begin</key> <string>\b([a-zA-Z_][a-zA-Z0-9_]*)\s*\:</string>
					<key>beginCaptures</key> <dict>
						<key>1</key> <dict>
							<key>name</key> <string>variable.other.quill</string>
						</dict>
					</dict>
					<key>patterns</key> <array> 
						<dict>
							<key>include</key> <string>#types</string>
						</dict>
					</array>
					<key>end</key> <string>(?=,|\))</string>
				</dict>

				<!-- type argument list -->
				<dict>
					<key>begin</key> <string>(\[)</string>
					<key>beginCaptures</key> <dict>
						<key>1</key> <dict>
							<key>name</key> <string>punctuation.separator.quill</string>
						</dict>
					</dict>
					<key>patterns</key> <array> 
						<dict>
							<key>match</key> <string>\b([a-zA-Z_][a-zA-Z0-9_]*)\b</string>
							<key>name</key> <string>entity.name.type.quill</string>
						</dict>
						<dict>
							<key>match</key> <string>(,)</string>
							<key>name</key> <string>punctuation.separator.quill</string>
						</dict>
					</array>
					<key>end</key> <string>(\])</string>
					<key>endCaptures</key> <dict>
						<key>1</key> <dict>
							<key>name</key> <string>punctuation.separator.quill</string>
						</dict>
					</dict>
				</dict>

				<!-- argument declaration without type -->
				<dict>
					<key>match</key> <string>\b([a-zA-Z_][a-zA-Z0-9_]*)\b</string>
					<key>name</key> <string>variable.other.quill</string>
				</dict>

			</array>
		</dict>
    	<key>main</key> <dict>
      		<key>patterns</key> <array> 

				<!-- comments -->
				<dict>
          			<key>match</key> <string>(//.*)</string>
          			<key>name</key> <string>comment.quill</string>
        		</dict>

				<!-- function declaration -->
				<dict>
					<key>begin</key> <string>\b(fun)\s+((?:[a-zA-Z_][a-zA-Z0-9_]*\:\:)*)([a-zA-Z_][a-zA-Z0-9_]*)\s*(?=\[.*?\]\s*\(|\()</string>
          			<key>beginCaptures</key> <dict>
            			<key>1</key> <dict>
              				<key>name</key> <string>storage.modifier.quill</string>
            			</dict>
						<key>3</key> <dict>
              				<key>name</key> <string>entity.name.function.quill</string>
            			</dict>
          			</dict>
          			<key>patterns</key> <array> 
						<dict>
							<key>include</key> <string>#argDecl</string>
						</dict>

						<!-- return type -->
						<dict>
							<key>begin</key> <string>(->)</string>
							<key>beginCaptures</key> <dict>
								<key>1</key> <dict>
									<key>name</key> <string>keyword.operator.quill</string>
								</dict>
							</dict>
							<key>patterns</key> <array> 
								<dict>
									<key>include</key> <string>#types</string>
								</dict>
							</array>
							<key>end</key> <string>(?=\{|\=)</string>
						</dict>

           			</array>
          			<key>end</key> <string>(\{|\=)</string>
          			<key>endCaptures</key> <dict>
            			<key>1</key> <dict>
              				<key>name</key> <string>punctuation.separator.quill</string>
            			</dict>
          			</dict>
        		</dict>

				<!-- structure / enum declaration -->
				<dict>
					<key>begin</key> <string>\b(enum|struct)\s+((?:[a-zA-Z_][a-zA-Z0-9_]*\:\:)*)([a-zA-Z_][a-zA-Z0-9_]*)\s*(?=\[.*?\]\s*\(|\()</string>
          			<key>beginCaptures</key> <dict>
            			<key>1</key> <dict>
              				<key>name</key> <string>storage.modifier.quill</string>
            			</dict>
						<key>3</key> <dict>
              				<key>name</key> <string>entity.name.type.quill</string>
            			</dict>
          			</dict>
          			<key>patterns</key> <array> 
						<dict>
							<key>include</key> <string>#argDecl</string>
						</dict>
           			</array>
          			<key>end</key> <string>(\))</string>
          			<key>endCaptures</key> <dict>
            			<key>1</key> <dict>
              				<key>name</key> <string>punctuation.separator.quill</string>
            			</dict>
          			</dict>
        		</dict>

				<!-- variable / constant declaration with type annotation -->
				<dict>
					<key>begin</key> <string>\b(val|mut)\s+((?:[a-zA-Z_][a-zA-Z0-9_]*\:\:)*)([a-zA-Z_][a-zA-Z0-9_]*)(\:)</string>
          			<key>beginCaptures</key> <dict>
            			<key>1</key> <dict>
              				<key>name</key> <string>storage.modifier.quill</string>
            			</dict>
						<key>3</key> <dict>
              				<key>name</key> <string>variable.other.quill</string>
            			</dict>
						<key>4</key> <dict>
              				<key>name</key> <string>punctuation.separator.quill</string>
            			</dict>
          			</dict>
          			<key>patterns</key> <array> 
						<dict>
              				<key>include</key> <string>#types</string>
            			</dict>
           			</array>
          			<key>end</key> <string>(\=)</string>
          			<key>endCaptures</key> <dict>
            			<key>1</key> <dict>
              				<key>name</key> <string>keyword.operator.quill</string>
            			</dict>
          			</dict>
        		</dict>

				<!-- function call (with type args) -->
				<dict>
					<key>begin</key> <string>\b([a-zA-Z_][a-zA-Z0-9_]*)\s*(?=\[.*?\]\s*\(|\()</string>
          			<key>beginCaptures</key> <dict>
            			<key>1</key> <dict>
              				<key>name</key> <string>entity.name.function.quill</string>
            			</dict>
          			</dict>
          			<key>patterns</key> <array> 
						<dict>
              				<key>include</key> <string>#types</string>
            			</dict>
           			</array>
          			<key>end</key> <string>(\]|\()</string>
          			<key>endCaptures</key> <dict>
            			<key>1</key> <dict>
              				<key>name</key> <string>punctuation.brackets.quill</string>
            			</dict>
          			</dict>
        		</dict>

				<!-- variable / function ref (with type args) -->
				<dict>
					<key>begin</key> <string>\b([a-zA-Z_][a-zA-Z0-9_]*)(?=\[.*?\])</string>
          			<key>beginCaptures</key> <dict>
            			<key>1</key> <dict>
              				<key>name</key> <string>variable.other.quill</string>
            			</dict>
          			</dict>
          			<key>patterns</key> <array> 
						<dict>
              				<key>include</key> <string>#types</string>
            			</dict>
           			</array>
          			<key>end</key> <string>(\])</string>
          			<key>endCaptures</key> <dict>
            			<key>1</key> <dict>
              				<key>name</key> <string>punctuation.brackets.quill</string>
            			</dict>
          			</dict>
        		</dict>

				<dict>
          			<key>match</key> <string>\b([a-zA-Z_][a-zA-Z0-9_]*)\s*(\()</string>
          			<key>captures</key> <dict>
						<key>1</key> <dict>
							<key>name</key> <string>entity.name.function.quill</string>
						</dict>
            			<key>2</key> <dict>
              				<key>name</key> <string>punctuation.brackets.quill</string>
            			</dict>
          			</dict>
        		</dict>

				<!-- keyword -->
        		<dict>
					<key>match</key> <string>\b(if|else|return|match)\b</string>
          			<key>name</key> <string>keyword.control.quill</string>
        		</dict>
				<dict>
					<key>match</key> <string>\b(ext|fun|val|mut|mod|use|pub|struct|enum)\b</string>
          			<key>name</key> <string>storage.modifier.quill</string>
        		</dict>
				<dict>
					<key>match</key> <string>\b(as)\b</string>
          			<key>name</key> <string>keyword.other.quill</string>
        		</dict>

				<!-- constant -->
				<dict>
          			<key>match</key> <string>\b(true|false|unit)\b</string>
          			<key>name</key> <string>constant.language.quill</string>
        		</dict>

				<!-- number literal -->
				<dict>
          			<key>match</key> <string>(([0-9]*\.)?[0-9]+)</string>
          			<key>name</key> <string>constant.numeric.quill</string>
        		</dict>

				<!-- operators -->
        		<dict>
					<key>match</key> <string>(->|&&|<|>|=|\+|-|\*|\/|%|!|\.|\|)</string>
          			<key>name</key> <string>keyword.operator.quill</string>
        		</dict>

				<!-- string literals -->
        		<dict>
					<key>begin</key> <string>(\&quot;)</string>
          			<key>beginCaptures</key> <dict>
            			<key>1</key> <dict>
              				<key>name</key> <string>string.quoted.double.quill</string>
            			</dict>
          			</dict>
          			<key>patterns</key> <array> 
						<dict>
          					<key>match</key> <string>(\\x[a-fA-F0-9]{2})</string>
          					<key>name</key> <string>constant.character.escape.quill</string>
        				</dict>
            			<dict>
          					<key>match</key> <string>(\\.)</string>
          					<key>name</key> <string>constant.character.escape.quill</string>
        				</dict>
						<dict>
          					<key>match</key> <string>(?<!\\)([^\\&quot;]+)</string>
          					<key>name</key> <string>string.quoted.double.quill</string>
        				</dict>
           			</array>
          			<key>end</key> <string>(?<!(?<!\\)\\)(\&quot;)</string>
          			<key>endCaptures</key> <dict>
            			<key>1</key> <dict>
              				<key>name</key> <string>string.quoted.double.quill</string>
            			</dict>
          			</dict>
        		</dict>

				<!-- variables -->
				<dict>
          			<key>match</key> <string>([a-zA-Z_][a-zA-Z0-9_]*\b(?!\:\:))</string>
          			<key>name</key> <string>variable.other.quill</string>
        		</dict>

				<!-- remaining punctuation -->
				<dict>
					<key>match</key> <string>(\(|\)|\[|\]|\{|\})</string>
					<key>name</key> <string>punctuation.brackets.quill</string>
				</dict>
				<dict>
					<key>match</key> <string>(,|\:)</string>
					<key>name</key> <string>punctuation.separator.quill</string>
				</dict>		
       		</array>
    	</dict>
    	<key>main__1</key> <dict>
      		<key>patterns</key> <array> 
        		<dict>
          			<key>include</key> <string>#main</string>
        		</dict>
       		</array>
    	</dict>
  	</dict>
</dict>
</plist>
